#!/usr/bin/env bash
#
#	command line interpretter for topaz script
#	
#	using 3.5.0 and beyond topaz commands
#

usage() {
  cat <<HELP
USAGE: $(basename $0) <script-path> [ <image-name> ] -- [ <topaz-args> ] [ -- [ <script-args> ] [ -- [ <non-option-script-args> ] ] ]
HELP
}

# https://github.com/mkropat/sh-realpath/blob/master/realpath.sh
realpath() {
    canonicalize_path "$(resolve_symlinks "$1")"
}

resolve_symlinks() {
    _resolve_symlinks "$1"
}

_resolve_symlinks() {
    _assert_no_path_cycles "$@" || return

    local dir_context path
    path=$(readlink -- "$1")
    if [ $? -eq 0 ]; then
        dir_context=$(dirname -- "$1")
        _resolve_symlinks "$(_prepend_dir_context_if_necessary "$dir_context" "$path")" "$@"
    else
        printf '%s\n' "$1"
    fi
}

_prepend_dir_context_if_necessary() {
    if [ "$1" = . ]; then
        printf '%s\n' "$2"
    else
        _prepend_path_if_relative "$1" "$2"
    fi
}

_prepend_path_if_relative() {
    case "$2" in
        /* ) printf '%s\n' "$2" ;;
         * ) printf '%s\n' "$1/$2" ;;
    esac
}

_assert_no_path_cycles() {
    local target path

    target=$1
    shift

    for path in "$@"; do
        if [ "$path" = "$target" ]; then
            return 1
        fi
    done
}

canonicalize_path() {
    if [ -d "$1" ]; then
        _canonicalize_dir_path "$1"
    else
        _canonicalize_file_path "$1"
    fi
}

_canonicalize_dir_path() {
    (cd "$1" 2>/dev/null && pwd -P)
}

_canonicalize_file_path() {
    local dir file
    dir=$(dirname -- "$1")
    file=$(basename -- "$1")
    (cd "$dir" 2>/dev/null && printf '%s/%s\n' "$(pwd -P)" "$file")
}

. $HOME/.st_launcher/st_launcher_default.env

topazScript=`realpath $1`
shift
imageName="$1"
shift

if [ "$imageName" = "--" ] ; then
	phase="topaz-args"
	imageName=""
else
	phase="image-name"
fi
theArgs=""
scriptArgs=""
topazArgs=""

for argument in $@ ; do
	if [ "$argument" = "--" ] ; then
		case "$phase" in
			image-name)
				phase="topaz-args"
				;;
			topaz-args)
				phase="script-args"
				topazArgs=$theArgs
				theArgs=""
				;;
			script-args)
				scriptArgs+=$theArgs	
				theArgs=""
				;;
			*) 
				echo "unknown phase"
				usage
				exit 1
				;;
		esac
	else
		theArgs+=" $argument"
	fi
done

echo "$phase"
case "$phase" in
	image-name)
		topazArgs=$theArgs
		;;
	topaz-args)
		if [ "${theArgs}x" = "x" ] ; then
			echo "missing required topaz arguments"
			usage
			exit 1
		fi
		topazArgs=$theArgs
		;;
	script-args)
		scriptArgs+=$theArgs
		;;
	*)
		echo "unknown phase"
		usage
		exit 1
		;;
esac

topazArgs+=" -S $topazScript"

echo "imageName: $imageName"
echo "topazArgs: $topazArgs"
echo "scriptArgs: $scriptArgs"
exit 0

debugCommandError="false"
topazDebugIfError="iferr 1 exit 1"

if [ "${ST_LAUNCHER_HOME}x" = "x" ] ; then
	export ST_LAUNCHER_HOME="$ST_LAUNCHER_DEFAULT_IMAGE_PATH/../.."
fi


